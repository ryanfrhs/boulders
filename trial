https://github.com/ryanfrhs/boulders.git
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Générateur de Bloc d'Escalade</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <h2>Générateur de Types de Mouvements pour Blocs d'Escalade</h2>
        <button id="generateButton">Générer les Mouvements</button>

        <div id="result" class="result hidden">
            <h3>Les Types de Mouvements pour Chaque Bloc :</h3>
            <ul id="movementsList"></ul>
        </div>
    </div>

    <script src="script.js"></script>
</body>
</html>
/* styles.css */
body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f9;
    margin: 0;
    padding: 0;
}

.container {
    width: 50%;
    margin: 50px auto;
    padding: 20px;
    background-color: #fff;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    border-radius: 8px;
    text-align: center;
}

h2 {
    color: #333;
}

button {
    padding: 12px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

button:hover {
    background-color: #0056b3;
}

.hidden {
    display: none;
}

.result {
    margin-top: 20px;
    padding: 10px;
    background-color: #28a745;
    color: white;
    border-radius: 4px;
}

ul {
    list-style-type: none;
    padding: 0;
}

li {
    margin: 8px 0;
    font-size: 16px;
}
// script.js
document.getElementById("generateButton").addEventListener("click", function() {
    // Liste des types de mouvements
    const movements = [
        "Dynamique",
        "Statique",
        "Traversée",
        "Off-width",
        "Mantle"
    ];

    // Niveaux de difficulté
    const levels = ["Jaune", "Vert", "Bleu", "Violet", "Rouge", "Blanc", "Noir"];

    // Sélectionner un mouvement aléatoire pour chaque niveau
    let resultHTML = '';
    levels.forEach(level => {
        const randomMovement = movements[Math.floor(Math.random() * movements.length)];
        resultHTML += `<li><strong>${level} :</strong> ${randomMovement}</li>`;
    });

    // Afficher les résultats
    const resultDiv = document.getElementById("result");
    const movementsList = document.getElementById("movementsList");

    movementsList.innerHTML = resultHTML;
    resultDiv.classList.remove("hidden");
});
